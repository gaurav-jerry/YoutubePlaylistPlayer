{"ast":null,"code":"var _jsxFileName = \"/Users/gauravsharma/work/Youtube Player/youtube-playlist-player/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport YouTube from 'react-youtube';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [songs, setsongs] = useState([]);\n  const [currentPlaying, setcurrentPlaying] = useState(null);\n  useEffect(() => {\n    axios({\n      url: 'https://www.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults=9&playlistId=PLcjXjwgJpOzZoOYXz8y3I2PE_HspGkUry&key=AIzaSyA43Saqt5kUkQwm-BV_tWWwgA8HP5bwbXE',\n      method: 'get'\n    }).then(response => setsongs(response.data.items)); //console.log(songs);\n  }, []);\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n  console.log(songs);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'list-container',\n    children: songs.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children:\n      /*#__PURE__*/\n      //<YouTube videoId={item.contentDetails.videoId} opts={opts} />\n      _jsxDEV(\"div\", {\n        className: 'List-Item',\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"video-thumbnail\",\n          src: item.snippet.thumbnails.default.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'list-title',\n          children: item.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'list-item-action-btn',\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: setcurrentPlaying(item),\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 26\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Za3REKRnazp+vVCfPSgjCipTeJI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gauravsharma/work/Youtube Player/youtube-playlist-player/src/App.js"],"names":["useEffect","useState","axios","YouTube","App","songs","setsongs","currentPlaying","setcurrentPlaying","url","method","then","response","data","items","opts","height","width","playerVars","autoplay","console","log","map","item","snippet","thumbnails","default","title","id"],"mappings":";;;AACA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,IAAD,CAApD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACbE,IAAAA,KAAK,CAAC;AACLO,MAAAA,GAAG,EAAE,0LADA;AAELC,MAAAA,MAAM,EAAE;AAFH,KAAD,CAAL,CAGEC,IAHF,CAGOC,QAAQ,IAAIN,QAAQ,CAACM,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAH3B,EADa,CAKd;AACD,GANQ,EAMN,EANM,CAAT;AAOA,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,KAAK,EAAE,KAFI;AAGXC,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,QAAQ,EAAE;AAFA;AAHD,GAAb;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAI,gBAAlB;AAAA,cACGA,KAAK,CAACiB,GAAN,CAAUC,IAAI,iBAAI;AAAA;AAAA;AACjB;AACA;AAAK,QAAA,SAAS,EAAI,WAAlB;AAAA,gCACE;AAAK,UAAA,GAAG,EAAG,iBAAX;AAA8B,UAAA,GAAG,EAAIA,IAAI,CAACC,OAAL,CAAaC,UAAb,CAAwBC,OAAxB,CAAgCjB;AAArE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAI,YAAlB;AAAA,oBAAiCc,IAAI,CAACC,OAAL,CAAaG;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAI,sBAAlB;AAAA,iCAA0C;AAAQ,YAAA,OAAO,EAAInB,iBAAiB,CAACe,IAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFiB,OAAaA,IAAI,CAACK,EAAlB;AAAA;AAAA;AAAA;AAAA,YAAlB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA/BQxB,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["\nimport {useEffect, useState} from 'react'\nimport axios from 'axios';\nimport YouTube from 'react-youtube';\nimport './App.css';\n\nfunction App() {\n  const [songs, setsongs] = useState([]);\n  const [currentPlaying, setcurrentPlaying] = useState(null);\n  useEffect(() => {\n     axios({\n      url: 'https://www.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults=9&playlistId=PLcjXjwgJpOzZoOYXz8y3I2PE_HspGkUry&key=AIzaSyA43Saqt5kUkQwm-BV_tWWwgA8HP5bwbXE',\n      method: 'get'\n    }).then(response => setsongs(response.data.items));\n    //console.log(songs);\n  }, [])\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  };\n  console.log(songs);\n  return (\n    <div className = {'list-container'}>\n      {songs.map(item => <div key  = {item.id}>{\n        //<YouTube videoId={item.contentDetails.videoId} opts={opts} />\n        <div className = {'List-Item'}>\n          <img alt = 'video-thumbnail'  src = {item.snippet.thumbnails.default.url} />\n          <div className = {'list-title'}>{item.snippet.title}</div>\n          <div className = {'list-item-action-btn'}><button onClick = {setcurrentPlaying(item)}>Play</button></div>\n        </div>\n        }</div>)}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}